name: Vercel Production Deployment
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  Test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.lock ]; then pip install -r requirements.lock; fi
      
      - name: Run tests
        run: |
          echo "✅ Running basic tests..."
          python -c "import sys; print('Python:', sys.version)"
          echo "✅ Tests passed!"

  Deploy-Production:
    runs-on: ubuntu-latest
    needs: Test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      
      - name: Deploy Project Artifacts to Vercel
        id: deploy
        run: |
          deployment_url=$(vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }} | tail -n 1)
          echo "DEPLOYMENT_URL=$deployment_url" >> $GITHUB_OUTPUT
      
      - name: Comment on Commit
        if: success()
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: context.sha,
              body: '🚀 배포 완료!\n\n- **URL**: ${{ steps.deploy.outputs.DEPLOYMENT_URL }}\n- **환경**: Production\n- **시간**: ' + new Date().toLocaleString('ko-KR', {timeZone: 'Asia/Seoul'})
            })
      
      - name: Send Notification
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "✅ 배포 성공! URL: ${{ steps.deploy.outputs.DEPLOYMENT_URL }}"
            # Slack 또는 카카오톡 웹훅 호출 코드 추가 가능
          else
            echo "❌ 배포 실패. 로그를 확인하세요."
          fi

  Deploy-Preview:
    runs-on: ubuntu-latest
    needs: Test
    if: github.event_name == 'pull_request'
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      
      - name: Deploy to Preview
        id: preview
        run: |
          preview_url=$(vercel deploy --token=${{ secrets.VERCEL_TOKEN }} | tail -n 1)
          echo "PREVIEW_URL=$preview_url" >> $GITHUB_OUTPUT
      
      - name: Comment PR
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '👀 미리보기 배포 완료!\n\n**URL**: ${{ steps.preview.outputs.PREVIEW_URL }}'
            })
